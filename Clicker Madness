local CoreGui = game:GetService("StarterGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Madness Clicker ðŸ‘¿", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionConfigs"})

local Tab = Window:MakeTab({
    Name = "Automations",
    Icon = "rbxassetid://122341342375300",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Autofarm"
})

_G.Autoclicker = false
_G.GroupChest = false
_G.DailyChest = false
_G.ClickMultiplier = false
_G.CursorDamage = false
_G.Health = false
_G.JumpUpgrade = false
_G.SpeedUpgrade = false
_G.PetStorage = false
_G.BossHit = false
_G.TwoxDamage = false
_G.XtwoHealth = false
_G.PetSlots = false
_G.SuperPetStorage = false
_G.Autorebirth = true
_G.RebirthAmount = 10000

-- Auto Click Functionality
function tap()
    spawn(function()
        while getgenv().autoclick == true do
            local args = {[1] = 1}
            game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.ClickService.Click:FireServer(unpack(args))
            task.wait()
        end
    end)
end

-- Auto Rebirth Functionality
function autorebirth(rebirthamount)
    spawn(function()
        while getgenv().autorebirth == true do
            local args = {[1] = rebirthamount}
            game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.RebirthService.BuyRebirths:FireServer(unpack(args))
            task.wait()
        end
    end)
end

-- Auto Gamepasses (fixing issue)
function buyGamePass(passName)
    local gamePasses = {
        ["Double Jump"] = 123456789, -- example, replace with actual pass IDs
        ["Auto Clicker"] = 987654321, -- example, replace with actual pass IDs
        -- Add more game pass IDs as necessary
    }

    local passId = gamePasses[passName]
    if passId then
        game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.GamePassService.BuyPass:FireServer(passId)
    else
        print("Invalid pass name.")
    end
end

-- Auto Clicker Toggle
Tab:AddToggle({
    Name = "Autoclicker",
    Default = false,
    Callback = function(state)
        _G.Autoclicker = state
        if _G.Autoclicker then
            tap()
        end
    end
})

local Section = Tab:AddSection({
    Name = "Chests"
})

-- Claim Group Chest Button
Tab:AddButton({
    Name = "Claim Group Chest (Join group first)",
    Default = false,
    Callback = function()
        local args = { [1] = "group1" }
        game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.ChestService.OpenChest:FireServer(unpack(args))
    end
})

-- Claim Daily Chest Button
Tab:AddButton({
    Name = "Claim Daily Chest",
    Default = false,
    Callback = function()
        local args = { [1] = "ChestOpens" }
        game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.DataService.Get:InvokeServer(unpack(args))
    end
})

-- Auto Claim Group Chest Toggle
Tab:AddToggle({
    Name = "Auto Claim Group Chest",
    Default = false,
    Callback = function(state)
        _G.GroupChest = state
        while _G.GroupChest do
            local args = { [1] = "group1" }
            game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.ChestService.OpenChest:FireServer(unpack(args))
            task.wait(5)
        end
    end
})

-- Auto Claim Daily Chest Toggle
Tab:AddToggle({
    Name = "Auto Claim Daily Chest",
    Default = false,
    Callback = function(state)
        _G.DailyChest = state
        while _G.DailyChest do
            local args = { [1] = "ChestOpens" }
            game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.DataService.Get:InvokeServer(unpack(args))
            task.wait(5)
        end
    end
})

-- Upgrade Section
local Section = Tab:AddSection({
    Name = "Upgrades"
})

-- Upgrade Buttons & Auto Upgrade Toggles
Tab:AddButton({
    Name = "Buy Click Multiplier x1 (Max 20k)",
    Default = false,
    Callback = function()
        local args = { [1] = "ClickMultiply" }
        game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.UpgradeService.BuyUpgrade:FireServer(unpack(args))
    end
})

Tab:AddToggle({
    Name = "Auto Buy Click Multiplier",
    Default = false,
    Callback = function(state)
        _G.ClickMultiplier = state
        while _G.ClickMultiplier do
            local args = { [1] = "ClickMultiply" }
            game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.UpgradeService.BuyUpgrade:FireServer(unpack(args))
            task.wait()
        end
    end
})

Tab:AddButton({
    Name = "Buy Cursor Damage x1 (Max 300)",
    Default = false,
    Callback = function()
        local args = { [1] = "CursorDamage" }
        game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.UpgradeService.BuyUpgrade:FireServer(unpack(args))
    end
})

Tab:AddToggle({
    Name = "Auto Buy Cursor Damage",
    Default = false,
    Callback = function(state)
        _G.CursorDamage = state
        while _G.CursorDamage do
            local args = { [1] = "CursorDamage" }
            game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.UpgradeService.BuyUpgrade:FireServer(unpack(args))
            task.wait()
        end
    end
})

-- More upgrades (Health, Jump, Speed, etc.)
-- Add additional upgrade buttons here similarly...

-- Auto Rebirth Settings
Tab:AddSlider({
    Name = "Rebirth Amount",
    Min = 1,
    Max = 1000000,
    Default = _G.RebirthAmount,
    Callback = function(value)
        _G.RebirthAmount = value
        autorebirth(_G.RebirthAmount)
    end
})

Tab:AddToggle({
    Name = "Autorebirth",
    Default = _G.Autorebirth,
    Callback = function(state)
        _G.Autorebirth = state
        if _G.Autorebirth then
            autorebirth(_G.RebirthAmount)
        end
    end
})

-- Auto Gamepass Toggle
Tab:AddToggle({
    Name = "Auto Buy Gamepasses",
    Default = true,  -- Set to false if you don't want auto gamepasses
    Callback = function(state)
        if state then
            -- Add game passes to automatically buy here:
            buyGamePass("Double Jump")  -- Example pass
            buyGamePass("Auto Clicker")  -- Example pass
        end
    end
})

OrionLib:Init()
